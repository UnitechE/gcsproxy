name: Release
on:
  push:
    tags:
      - v*

env:
  PROJECT_ID: unitech-production
  GKE_LOCATION_NAME: asia-east1
  GKE_CLUSTER_NAME: unitech-production-gke
  IMAGE_TAG: ${{ github.ref_name }}
  GAR_REGISTRY: asia-east1-docker.pkg.dev
  GAR_REPOSITORY: unitech-application
  IMAGE_NAME: gcsproxy

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build, tag, and push the image to Google GAR
        id: build-image
        run: |
          echo "Build a docker container and push it to GAR"
          docker build -t ${{ env.GAR_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          echo "Pushing image to GAR..."
          docker push ${{ env.GAR_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
